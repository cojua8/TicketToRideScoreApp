{"version":3,"sources":["Components/RouteScoreButton/RouteScoreButton.jsx","Components/RouteScore/RouteScore.jsx","App.js","reportWebVitals.js","index.js"],"names":["RouteScoreButton","props","length","className","role","type","onClick","numberRoutes","handleRouteChange","routeScore","style","width","value","onChange","e","newValue","parseInt","target","isNaN","RouteScore","useState","routes","setRoutes","newRoutes","map","elem","buttons","route","totalScore","reduce","a","b","totalTrains","scope","App","alt","src","process","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qPA4CeA,EAxCU,SAACC,GAiBtB,OACI,+BACI,6BACI,6BAAKA,EAAMC,WAEf,6BACI,sBAAKC,UAAU,cAAcC,KAAK,QAAlC,UACI,wBAAQC,KAAK,SAASF,UAAU,kBAAkBG,QApB5C,WAClBL,EAAMM,aAAe,GAAKN,EAAMO,kBAAkBP,EAAMQ,WAAYR,EAAMM,aAAe,IAmB7E,SACI,mBAAGJ,UAAU,iBAEjB,uBAAOE,KAAK,OAAOF,UAAU,2BAA2BO,MAAO,CAAEC,MAAO,QAAUC,MAAOX,EAAMM,aAAcM,SAnBxG,SAACC,GAClB,IAAIC,EAAWC,SAASF,EAAEG,OAAOL,OAC7BM,MAAMH,GACNd,EAAMO,kBAAkBP,EAAMQ,WAAY,GAE1CR,EAAMO,kBAAkBP,EAAMQ,WAAYM,MAelC,wBAAQV,KAAK,SAASF,UAAU,kBAAkBG,QA3B5C,WAClBL,EAAMO,kBAAkBP,EAAMQ,WAAYR,EAAMM,aAAe,IA0BnD,SACI,mBAAGJ,UAAU,sBAIzB,6BACI,6BAAKF,EAAMQ,WAAaR,EAAMM,qBCY/BY,EA/CI,WACf,MAA4BC,mBAAS,CACjC,CAAElB,OAAQ,EAAGO,WAAY,EAAGF,aAAc,GAC1C,CAAEL,OAAQ,EAAGO,WAAY,EAAGF,aAAc,GAC1C,CAAEL,OAAQ,EAAGO,WAAY,EAAGF,aAAc,GAC1C,CAAEL,OAAQ,EAAGO,WAAY,EAAGF,aAAc,GAC1C,CAAEL,OAAQ,EAAGO,WAAY,GAAIF,aAAc,GAC3C,CAAEL,OAAQ,EAAGO,WAAY,GAAIF,aAAc,KAN/C,mBAAOc,EAAP,KAAeC,EAAf,KASMd,EAAoB,SAACC,EAAYF,GACnC,IAAMgB,EAAYF,EAAOG,KAAI,SAAAC,GACzB,OAAIA,EAAKhB,aAAeA,EACb,2BAAKgB,GAAZ,IAAkBlB,iBAEfkB,KAEXH,EAAUC,IAGRG,EAAUL,EAAOG,KAAI,SAACG,GAAD,OAAW,cAAC,EAAD,CAAkBzB,OAAQyB,EAAMzB,OAAQO,WAAYkB,EAAMlB,WAAYF,aAAcoB,EAAMpB,aAAcqB,WAAYD,EAAMC,WAA+BpB,kBAAmBA,GAAjCmB,EAAMzB,WAEjL0B,EAAaP,EAAOQ,QAAO,SAACC,EAAGC,GAAJ,OAAUD,EAAKC,EAAEtB,WAAasB,EAAExB,eAAe,GAC1EyB,EAAcX,EAAOQ,QAAO,SAACC,EAAGC,GAAJ,OAAUD,EAAKC,EAAE7B,OAAS6B,EAAExB,eAAe,GAE7E,OACI,qBAAKJ,UAAU,qDAAf,SACI,sBAAKA,UAAU,4EAAf,UACI,wBAAOA,UAAU,QAAjB,UACI,gCACI,qBAAIA,UAAU,iBAAd,UACI,oBAAI8B,MAAM,MAAV,0BACA,oBAAIA,MAAM,MAAV,0BACA,oBAAIA,MAAM,MAAV,8BAGR,uBAAO9B,UAAU,2BAAjB,SACKuB,OAGT,qBAAIvB,UAAU,iBAAd,gCAAmD6B,KACnD,+CAAkBJ,WC1BnBM,MAff,WACE,OACE,sBAAK/B,UAAU,MAAf,UAEE,qBAAKA,UAAU,2CAA2CgC,IAAI,GAC5DC,IAAKC,gDAEP,qBAAKlC,UAAU,YAAf,SACE,cAAC,EAAD,UCCOmC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.91585d23.chunk.js","sourcesContent":["import React from 'react'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport 'bootstrap-icons/font/bootstrap-icons.css'\r\n\r\nconst RouteScoreButton = (props) => {\r\n    const increaseRoute = () => {\r\n        props.handleRouteChange(props.routeScore, props.numberRoutes + 1)\r\n    }\r\n    const decreaseRoute = () => {\r\n        props.numberRoutes > 0 && props.handleRouteChange(props.routeScore, props.numberRoutes - 1)\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        let newValue = parseInt(e.target.value)\r\n        if (isNaN(newValue)) {\r\n            props.handleRouteChange(props.routeScore, 0)\r\n        } else {\r\n            props.handleRouteChange(props.routeScore, newValue)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <tr>\r\n            <th>\r\n                <h3>{props.length}</h3>\r\n            </th>\r\n            <th>\r\n                <div className=\"input-group\" role=\"group\">\r\n                    <button type=\"button\" className=\"btn btn-primary\" onClick={decreaseRoute}>\r\n                        <i className=\"bi bi-dash\"/>\r\n                    </button>\r\n                    <input type=\"text\" className=\"form-control text-center\" style={{ width: '50px' }} value={props.numberRoutes} onChange={handleChange} />\r\n                    <button type=\"button\" className=\"btn btn-primary\" onClick={increaseRoute}>\r\n                        <i className=\"bi bi-plus\"/>\r\n                    </button>\r\n                </div>\r\n            </th>\r\n            <th>\r\n                <h3>{props.routeScore * props.numberRoutes}</h3>\r\n            </th>\r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default RouteScoreButton\r\n","import React, { useState } from 'react'\r\nimport RouteScoreButton from '../RouteScoreButton/RouteScoreButton'\r\n\r\nconst RouteScore = () => {\r\n    const [routes, setRoutes] = useState([\r\n        { length: 1, routeScore: 1, numberRoutes: 0 },\r\n        { length: 2, routeScore: 2, numberRoutes: 0 },\r\n        { length: 3, routeScore: 4, numberRoutes: 0 },\r\n        { length: 4, routeScore: 7, numberRoutes: 0 },\r\n        { length: 6, routeScore: 15, numberRoutes: 0 },\r\n        { length: 8, routeScore: 21, numberRoutes: 0 },\r\n    ])\r\n\r\n    const handleRouteChange = (routeScore, numberRoutes) => {\r\n        const newRoutes = routes.map(elem => {\r\n            if (elem.routeScore === routeScore) {\r\n                return { ...elem, numberRoutes }\r\n            }\r\n            return elem\r\n        })\r\n        setRoutes(newRoutes)\r\n    }\r\n\r\n    const buttons = routes.map((route) => <RouteScoreButton length={route.length} routeScore={route.routeScore} numberRoutes={route.numberRoutes} totalScore={route.totalScore} key={route.length} handleRouteChange={handleRouteChange} />)\r\n\r\n    const totalScore = routes.reduce((a, b) => a + (b.routeScore * b.numberRoutes), 0)\r\n    const totalTrains = routes.reduce((a, b) => a + (b.length * b.numberRoutes), 0)\r\n\r\n    return (\r\n        <div className=\"position-absolute top-50 start-50 translate-middle\">\r\n            <div className=\"bg-light border border-primary rounded-3 px-4 py-4 opacity-75 text-center\">\r\n                <table className=\"table\">\r\n                    <thead>\r\n                        <tr className=\"text-center h4\">\r\n                            <th scope=\"col\">Route length</th>\r\n                            <th scope=\"col\">Total routes</th>\r\n                            <th scope=\"col\">Total score</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody className=\"text-center align-middle\">\r\n                        {buttons}\r\n                    </tbody>\r\n                </table>\r\n                <h6 className=\"text-secondary\">Total used trains: {totalTrains}</h6>\r\n                <h2>Total score: {totalScore}</h2>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RouteScore\r\n","import 'bootstrap/dist/css/bootstrap.min.css'\nimport RouteScore from './Components/RouteScore/RouteScore';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n\n      <img className=\"position-absolute w-100 h-100 opacity-25\" alt=\"\" \n        src={process.env.PUBLIC_URL + \"/images/background.jpg\"}/>\n\n      <div className=\"container\">\n        <RouteScore/>\n      </div>\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}